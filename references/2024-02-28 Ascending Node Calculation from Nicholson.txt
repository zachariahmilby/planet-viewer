PDS_VERSION_ID                   = PDS3
RECORD_TYPE                      = STREAM

OBJECT                           = TEXT
PUBLICATION_DATE                 = 1993-08-05
  NOTE                           = "Description of the planet pole
vectors and longitude origins for the rings of Saturn, Uranus and
Neptune.  The values are given in J2000 and B1950 coordinates."
END_OBJECT                       = TEXT
END

  Ring poles in J2000 coordinates and longitude offsets.
  -----------------------------------------------------
  P. D. Nicholson, 5 August 1993.

The following documents the planet pole vectors (B1950) used to
generate the current PDS Ring Node geometry files, and the
corresponding J2000 pole positions.  The offsets between B1950
ring longitudes and J2000 ring longitudes are also given, with
intermediate results. These data were generated by program
POLES.FOR, and are documented more fully therein.  (The program
has been appended to the end of this file).

  B1950_J2000 rotation matrix:

       0.9999256795056970 -0.0111814825031686 -0.0048590034061860
       0.0111814825218270  0.9999374849013347 -0.0000271626003894
       0.0048590033632497 -0.0000271702800083  0.9999881946043622

 SATURN:

     B1950 pole vector     =   0.09110109  0.07223354  0.99321846
       RA, DEC (B1950)     =    38.410700   83.323520
     B1950 asc node vector =  -0.62129412  0.78357744  0.00000000

     J2000 pole vector     =   0.08546059  0.07322069  0.99364743
       RA, DEC (J2000)     =    40.589217   83.538364

     precessed B1950 node  =  -0.63000951  0.77658147 -0.00304016
          RA, DEC (J2000)  =   129.051039   -0.174189

     J2000_long of B1950 node =    -1.548008

 URANUS:

     B1950 pole vector     =   0.22377547  0.93912645  0.26070300
       RA, DEC (B1950)     =    76.597460   15.111780
     B1950 asc node vector =  -0.97276560  0.23179103  0.00000000

     J2000 pole vector     =   0.21199126  0.94156280  0.26176174
       RA, DEC (J2000)     =    77.311529   15.174623

     precessed B1950 node  =  -0.97528507  0.22089958 -0.00473297
          RA, DEC (J2000)  =   167.237980   -0.271180

     J2000_long of B1950 node =    -0.280977

 NEPTUNE: invariable pole

     B1950 pole vector     =   0.35306238 -0.63603240  0.68615577
       RA, DEC (B1950)     =   299.034710   43.326570
     B1950 asc node vector =   0.87432585  0.48533938  0.00000000

     J2000 pole vector     =   0.35681390 -0.63206351  0.68788048
       RA, DEC (J2000)     =   299.445693   43.462564

     precessed B1950 node  =   0.86883405  0.49508530  0.00423517
          RA, DEC (J2000)  =    29.675668    0.242658

     J2000_long of B1950 node =     0.334321

 NEPTUNE: planet pole

     B1950 pole vector     =   0.35405460 -0.64249475  0.67959240
       RA, DEC (B1950)     =   298.857500   42.811800
     B1950 asc node vector =   0.87582277  0.48263286  0.00000000

     J2000 pole vector     =   0.35791019 -0.63851419  0.68132219
       RA, DEC (J2000)     =   299.272200   42.947050

     precessed B1950 node  =   0.87036113  0.49239569  0.00424251
          RA, DEC (J2000)  =    29.498457    0.243079

     J2000_long of B1950 node =     0.332083

Notes:
        Saturn:  NCP (1990) pole as used for RSS, PPS, UVS data.

        Uranus:  Planet pole as used for RSS, PPS data, and very
                 slightly different from French etal's (1988)
                 published pole.  Individual ring longitudes measured
                 in equator plane to ring node, and then in ring
                 plane.

        Neptune: PDS files for PPS data using Adams ring pole use
                 longitudes measured in the invariable plane, and then
                 in the ring plane, so J2000 offset is in inv. plane.
                 Previous PDS files at Ames used the Neptune equator
                 plane determined by Jacobson (1990), so this is given
                 here also.

        Longitude offset: listed value = J2000_long - B1950_long.

*****************************************************************
PROGRAM POLES.FOR

c     pole_precess.f

c  Rigorously precess pole positions from B1950 to J2000
c  using the algorithm from:
c     Lieske (1979) A&A 73, 282,
c  augmented by the correction from FK4 to the equinox, after
c     Fricke (1982) A&A 107, L13, and
c     Standish (1982) A&A 114, 297.

c  Note: this program is for unit vectors only; it does NOT
c        include the proper motion or radial velocity terms,
c        or the catalog E-term corrections, appropriate
c        for stellar positions (see Aoki etal. A&A 128, 263 [1983]).

c  Input:
c     pole RA, DEC (decimal degrees, FK4 system)

c  Output:
c     precessed RA, DEC (decimal degrees, J2000)
c     offset from B1950_longitude to J2000_longitude, as
c        defined by the ascending node of the planet's
c        equator plane on the earth's equator.

c  Algorithm:
c     A 'B1950' pole is assumed to actually be on the FK4 star
c     catalog frame, as this is what the JPL planetary and S/C
c     ephemerides are adjusted to, or calculated in. This frame
c     differs from the true (dynamical) B1950 system by a rotation
c     about the Z-axis, referred to as the 'equinox correction',
c     E_1950. Fricke determined a value of E_1950 = 0.525" for
c     the FK4 system. Standish determined more precise values of
c     0.53155" for DE-118 (equivalent to DE-200), and 0.5247"
c     for DE-130 (or DE-202). At Standish's recommendation, we
c     adopt the value of E_1950 = 0.525" here, resulting in errors
c     of at most 0.007" in RA in the precessed pole.

c     Once the equinox correction is applied to bring the FK4 pole
c     onto the dynamical B1950 system, the pure IAU-1976 precession
c     matrix, as given by Lieske (1979), is used to rotate to the
c     J2000 equator and equinox.  This is done here via the 3
c     individual axis rotations (z, theta, and zeta), to preserve
c     the pure rotational character of the transformation. All
c     four rotations are applied to unit vectors to derive the
c     combined matrix, M, for B1950 -> J2000 conversions.

c  Program written by P. D. Nicholson, Cornell, 4 August 1993.
c  ---------------------------------------------------------------

      implicit real*8 (a-h,o-z)
      real*8 M(3,3)
      dimension C(3,3), rn0(3), rn_old(3)
      dimension r0(3), r(3), r1(3), r2(3), dummy(3)

      zz = acos(0.0d0)/90.0d0

c  primitive rotations for precession (arcsec -> degrees):
      E_1950 = 0.525d0 / 3600.0d0
      z = 1153.041d0 / 3600.0d0
      theta = 1002.261d0 / 3600.0d0
      zeta = 1152.842d0 / 3600.0d0

c  use primitive rotations to derive B1950 -> J2000 matrix, M:
      do i=1,3
         do j=1,3
            r0(j) = 0.0d0
         end do
      r0(i) = 1.0d0
      call ROT (3, -E_1950, r0, dummy)
      call ROT (3, -zeta, dummy, r1)
      call ROT (2, theta, r1, dummy)
      call ROT (3, -z, dummy, r1)
         do j=1,3
            M(j,i) = r1(j)
         end do
      end do
      write (6,64) ((M(i,j), j=1,3), i=1,3)
 64   format(2x,'B1950_J2000 matrix:'/(5x,3f20.16))
      write (6,*)

 100  read (5,*,end=999) ra0, dec0

      r0(1) = cos(ra0*zz)*cos(dec0*zz)
      r0(2) = sin(ra0*zz)*cos(dec0*zz)
      r0(3) = sin(dec0*zz)
      write (6,65) r0
 65   format(5x,'B1950 pole vector     = ',3f12.8)
      write (6,11) ra0, dec0
 11   format(5x,'  RA, DEC (B1950)     = ',2f12.6)

      rn0(1) = -sin(ra0*zz)
      rn0(2) =  cos(ra0*zz)
      rn0(3) = 0.0d0
      write (6,66) rn0
 66   format(5x,'B1950 asc node vector = ',3f12.8)
      write (6,*)

      call lieske79(C)

c  first apply equinox rotation at B1950 epoch:
      call ROT (3, -E_1950, r0, r1)

c  ...and then rotate to J2000 using individual rotations:
      call ROT (3, -zeta, r1, dummy)
      call ROT (2, theta, dummy, r2)
      call ROT (3, -z, r2, r)
      decp = asin(r(3))/zz
      rap = atan2(r(2),r(1))/zz
      if (rap.lt.0.0d0) rap = rap + 360.0d0
      write (6,67) r
      write (6,68) rap, decp
 67   format(5x,'J2000 pole vector     = ',3f12.8)
 68   format(5x,'  RA, DEC (J2000)     = ',2f12.6)
      write (6,*)

c  ... or rotate to J2000 using Lieske 3*3 matrix:
c      do i=1,3
c         r2(i) = 0.0d0
c         do k=1,3
c            r2(i) = r2(i) + C(i,k)*r1(k)
c         end do
c      end do
c      dec = asin(r2(3))/zz
c      ra = atan2(r2(2),r2(1))/zz
c      if (ra.lt.0.0d0) ra = ra + 360.0d0
c      write (6,67) r2
c      write (6,68) ra, dec
c      write (6,*)

c  now rotate B1950 asc. node to J2000:
      call ROT (3, -E_1950, rn0, r1)
      call ROT (3, -zeta, r1, dummy)
      call ROT (2, theta, dummy, r1)
      call ROT (3, -z, r1, rn_old)
      dec = asin(rn_old(3))/zz
      ra = atan2(rn_old(2),rn_old(1))/zz
      if (ra.lt.0.0d0) ra = ra + 360.0d0
      write (6,69) rn_old
      write (6,70) ra, dec
 69   format(5x,'precessed B1950 node  = ',3f12.8)
 70   format(5x,'     RA, DEC (J2000)  = ',2f12.6)
      write (6,*)

c  ... and rotate old node to planetary equatorial coordinates:
      call ROT (3, rap+90.0d0, rn_old, dummy)
      call ROT (1, 90.0d0-decp, dummy, r1)
      dlong = atan2(r1(2),r1(1))/zz
      write (6,72) dlong
 72   format(5x,'J2000_long of B1950 node = ',f12.6)
      write (6,*)
      write (6,*)
      go to 100
 999  continue
      end


      subroutine lieske79 (C)
      real*8 C(3,3)
c  Lieske (1979):
c    (NOTE: this is the pure IAU1976 precession matrix,
c     without FK4/FK5 equinox corrections.)

      C(1,1) =  0.999925707952D0
      C(1,2) = -0.011178938138D0
      C(1,3) = -0.004859003815D0

      C(2,1) =  0.011178938126D0
      C(2,2) =  0.999937513350D0
      C(2,3) = -0.000027162595D0

      C(3,1) =  0.004859003841D0
      C(3,2) = -0.000027157926D0
      C(3,3) =  0.999988194602D0
      return
      end


        subroutine ROT (i, theta, r0, r)
c  performs a coordinate system rotation of 'theta'
c  clockwise about axis 'i'.

c     input vector: r0
c     output vector: r

        implicit real*8 (a-h,o-z)
        dimension r0(3), r(3), c(3,3), dummy(3)
        z = 90.0d0/acos(0.0d0)
        cth = cos (theta/z)
        sth = sin (theta/z)
        j = i+1
        if (j.gt.3) j = j-3
        k = j+1
        if (k.gt.3) k = k-3

        c(i,i) = 1.0d0
        c(j,j) = cth
        c(k,k) = cth

        c(i,j) = 0.0d0
        c(i,k) = 0.0d0
        c(j,i) = 0.0d0
        c(k,i) = 0.0d0

        c(j,k) = sth
        c(k,j) = -sth

        do 10 m=1,3
        dummy(m) = 0.0d0
        do 20 n=1,3
 20     dummy(m) = dummy(m) + c(m,n)*r0(n)
 10     continue
        do 30 m=1,3
        r(m) = dummy(m)
 30     continue
        return
        end


        double precision function DOT (r1, r2)
        implicit real*8 (a-h, o-z)
        dimension r1(3), r2(3)
        sum = 0.0d0
        do i=1,3
           sum = sum +r1(i)*r2(i)
        end do
        dot = sum
        return
        end
